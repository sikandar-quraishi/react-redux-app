{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","console","log","type","payload","selectedSong","duration","App","id","SongDetail","combineReducers","Action","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"sPAKOA,E,qLACW,IAAD,OACR,OAAOC,KAAKC,MAAMC,MAAMC,KAAK,SAAAC,GAC1B,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BACAA,UAAU,oBACVG,QAAS,kBAAI,EAAKP,MAAMQ,WAAWL,KAFnC,WAOJ,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAM3C,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAnB9BC,aA2BTC,eALS,SAACC,GAErB,OADAC,QAAQC,IAAIF,GACL,CAACX,MAAOW,EAAMX,SAGc,CAACO,WC/Bd,SAACL,GAEvB,MAAM,CACFY,KAAM,gBACNC,QAASb,KD2BFQ,CAAsCb,GEVtCa,eAJS,SAACC,GACrB,MAAO,CAAET,KAAMS,EAAMK,gBAGVN,EAlBI,SAAC,GAAY,IAAXR,EAAU,EAAVA,KACjB,OAAIA,EAGI,6BACI,2CACE,qCACWA,EAAKG,MACd,6BAFF,aAGcH,EAAKe,WAPvB,6BAAK,iDCeJC,G,MAfH,WACR,OACK,yBAAKf,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACZ,kBAAC,EAAD,OAEH,yBAAKgB,GAAG,OAAOhB,UAAU,qBACrB,kBAACiB,EAAD,W,OCGNC,cAAgB,CAC3BrB,MAjBiB,WACjB,MAAM,CACE,CAACK,MAAO,YAAaY,SAAU,QAC/B,CAACZ,MAAO,WAAYY,SAAU,QAC9B,CAACZ,MAAO,WAAYY,SAAU,QAC9B,CAACZ,MAAO,oBAAqBY,SAAU,UAa/CD,aATwB,WAAiC,IAAhCA,EAA+B,uDAAhB,KAAMM,EAAU,uCACxD,MAAoB,kBAAhBA,EAAOR,KACAQ,EAAOP,QAEPC,KCLfO,IAASC,OACT,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC7B,kBAAC,EAAD,OAEAC,SAASC,eAAe,W","file":"static/js/main.d7cc6ebc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { selectSong } from '../actions'\r\n\r\n\r\n class SongList extends Component {\r\n     renderList(){\r\n         return this.props.songs.map( song =>{\r\n            return(\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button \r\n                        className=\"ui button primary\"\r\n                        onClick={()=>this.props.selectSong(song)}\r\n                        >\r\n                         Select\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">{song.title}</div>\r\n                </div>\r\n            );\r\n         })\r\n     }\r\n    render() {\r\n        return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n    };\r\n};\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return {songs: state.songs};\r\n}\r\n\r\nexport default connect(mapStateToProps,{selectSong})(SongList);","// Action creator\r\nexport const selectSong = (song)=>{\r\n// Action\r\n    return{\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import { selectSong } from '../actions';\r\n\r\nconst songDetail = ({song}) => {\r\n    if(!song){\r\n        return<div><h3>Select A Song</h3></div>;\r\n    }\r\n    return  <div>\r\n                <h3>Detail For:</h3>\r\n                  <p>\r\n                     Title: {song.title}\r\n                    <br/>\r\n                     Duration: {song.duration}\r\n                  </p>\r\n            </div>;\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return { song: state.selectedSong}\r\n};\r\n\r\nexport default connect(mapStateToProps) (songDetail);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail'\r\nimport './App.css'\r\n\r\n\r\nconst App = () => {\r\n    return(\r\n         <div className=\"ui container grid\">\r\n             <div className=\"ui row\">\r\n                 <div className=\"column eight wide\" >\r\n                    <SongList/>\r\n                 </div>\r\n                 <div id=\"left\" className=\"column eight wide\" >\r\n                     <SongDetail/>\r\n                 </div>\r\n             </div>  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers} from 'redux'\r\nconst songsReducer = () =>{\r\n    return[\r\n            {title: 'No Scrubs', duration: '4:05'},\r\n            {title: 'Macarena', duration: '2:30'},\r\n            {title: 'All Star', duration: '3:15'},\r\n            {title: 'I Want it The way', duration: '1:45'}\r\n            \r\n        ];  \r\n};\r\nconst selectedSongReducer = (selectedSong = null, Action) =>{\r\n    if (Action.type === 'SONG_SELECTED'){\r\n        return Action.payload;  \r\n}\r\n        return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducers from './reducers';\n\n\nReactDOM.render(\n<Provider store={createStore(reducers)}>\n<App />\n</Provider>, \ndocument.getElementById('root'));\n"],"sourceRoot":""}